{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NKU 640","text":"<p>Welcome to the NKU 640 course site!</p>"},{"location":"#menu","title":"Menu","text":"<ul> <li>TODO-API</li> <li>Quality Software</li> </ul> <p>This site contains: - Homework 4: TODO-API (REST API project) - Homework 5: Quality Software (with Marp presentation example)</p> <p>Explore the navigation links above for details on each assignment.</p> \u00a9 2025 NKU 640"},{"location":"homework4/","title":"TODO REST API","text":"<p>This project is a TODO list REST API intended as a personal task manager. The API supports creating, retrieving, updating, and deleting tasks and lists.</p>"},{"location":"homework4/#github-page-nku-640-todo-rest-api","title":"Github Page: NKU-640-todo-rest-api","text":""},{"location":"homework4/#plan","title":"Plan","text":"<p>The project plan is available here: HW4 Plan (stage 1)</p>"},{"location":"homework4/#core-features","title":"Core features","text":"<ul> <li>Create, read, update and delete (CRUD) tasks</li> <li>Mark tasks as complete/incomplete</li> <li>Set due dates for tasks</li> <li>Assign priorities to tasks (e.g. low, medium, high)</li> <li>Assign categories or tags to tasks</li> <li>Support multiple TODO lists (e.g. \"groceries\", \"work\")</li> </ul>"},{"location":"homework4/#possible-future-features","title":"Possible future features","text":"<ul> <li>User authentication and per-user lists</li> <li>Recurring tasks and reminders</li> <li>Search and filtering (by due date, priority, category)</li> <li>Import/export of tasks (CSV/JSON)</li> <li>Web UI and integrations (voice assistant, calendar)</li> </ul>"},{"location":"homework4/#data-model-example","title":"Data model (example)","text":""},{"location":"homework4/#list","title":"List","text":"<ul> <li><code>id</code> \u2014 <code>string</code> (UUID)</li> <li><code>name</code> \u2014 <code>string</code></li> <li><code>description</code> \u2014 <code>string</code> (optional)</li> </ul>"},{"location":"homework4/#task","title":"Task","text":"<ul> <li><code>id</code> \u2014 <code>string</code> (UUID)</li> <li><code>listId</code> \u2014 <code>string</code> (UUID) \u2014 id of the list this task belongs to</li> <li><code>title</code> \u2014 <code>string</code></li> <li><code>description</code> \u2014 <code>string</code> (optional)</li> <li><code>completed</code> \u2014 <code>boolean</code></li> <li><code>dueDate</code> \u2014 <code>string</code> (ISO 8601, optional)</li> <li><code>priority</code> \u2014 <code>string</code> (optional, e.g. <code>low</code>, <code>medium</code>, <code>high</code>)</li> <li><code>categories</code> \u2014 <code>string[]</code> (optional)</li> <li><code>createdAt</code> \u2014 <code>string</code> (ISO 8601)</li> <li><code>updatedAt</code> \u2014 <code>string</code> (ISO 8601, optional)</li> </ul>"},{"location":"homework4/#example-rest-endpoints-grouped-by-http-method","title":"Example REST endpoints (grouped by HTTP method)","text":""},{"location":"homework4/#get-endpoints","title":"GET endpoints","text":"<ul> <li>GET /lists \u2014 Return all lists.</li> </ul> <p>Response (200):</p> <p><code>json   [ { \"id\": \"a1b2c3d4\", \"name\": \"Groceries\", \"description\": \"Weekly shopping list\", \"createdAt\": \"2025-10-31T12:00:00Z\" } ]</code></p> <ul> <li>GET /lists/:id \u2014 Get a single list by id.</li> </ul> <p>Response (200):</p> <p><code>json   { \"id\": \"a1b2c3d4\", \"name\": \"Groceries\", \"description\": \"Weekly shopping list\" }</code></p> <ul> <li>GET /lists/:listId/tasks \u2014 Return tasks in a list.</li> </ul> <p>Response (200):</p> <p><code>json   [ { \"id\": \"t123\", \"listId\": \"a1b2c3d4\", \"title\": \"Buy milk\", \"completed\": false, \"dueDate\": \"2025-11-01T18:00:00Z\", \"priority\": \"medium\" } ]</code></p> <ul> <li>GET /tasks/:id \u2014 Get a single task.</li> </ul> <p>Response (200):</p> <p><code>json   { \"id\": \"t123\", \"listId\": \"a1b2c3d4\", \"title\": \"Buy milk\", \"completed\": false, \"dueDate\": \"2025-11-01T18:00:00Z\", \"priority\": \"medium\" }</code></p> <ul> <li>GET /users/:id \u2014 Get user profile (protected; requires bearer token).</li> </ul> <p>Response (200):</p> <p><code>json   { \"id\": \"u1\", \"username\": \"alice\", \"email\": \"alice@example.com\" }</code></p>"},{"location":"homework4/#post-endpoints","title":"POST endpoints","text":"<ul> <li>POST /lists \u2014 Create a new list.</li> </ul> <p>Request (JSON):</p> <p><code>json   { \"name\": \"Groceries\", \"description\": \"Weekly shopping list\" }</code></p> <p>Response (201):</p> <p><code>json   { \"id\": \"a1b2c3d4\", \"name\": \"Groceries\", \"description\": \"Weekly shopping list\", \"createdAt\": \"2025-10-31T12:00:00Z\" }</code></p> <ul> <li>POST /lists/:listId/tasks \u2014 Create a task in a list.</li> </ul> <p>Request (JSON):</p> <p><code>json   {     \"title\": \"Buy milk\",     \"description\": \"2 liters, skim\",     \"dueDate\": \"2025-11-01T18:00:00Z\",     \"priority\": \"medium\",     \"categories\": [\"groceries\"]   }</code></p> <p>Response (201):</p> <p><code>json   { \"id\": \"t123\", \"listId\": \"a1b2c3d4\", \"title\": \"Buy milk\", \"description\": \"2 liters, skim\", \"completed\": false, \"dueDate\": \"2025-11-01T18:00:00Z\", \"priority\": \"medium\", \"categories\": [\"groceries\"], \"createdAt\": \"2025-10-31T12:05:00Z\" }</code></p> <ul> <li>POST /users \u2014 Create a new user (signup).</li> </ul> <p>Request (JSON):</p> <p><code>json   { \"username\": \"alice\", \"password\": \"s3cr3t\", \"email\": \"alice@example.com\" }</code></p> <p>Response (201):</p> <p><code>json   { \"id\": \"u1\", \"username\": \"alice\", \"email\": \"alice@example.com\", \"createdAt\": \"2025-10-31T12:10:00Z\" }</code></p> <ul> <li>POST /auth/login \u2014 Authenticate and obtain a token/session.</li> </ul> <p>Request (JSON):</p> <p><code>json   { \"username\": \"alice\", \"password\": \"s3cr3t\" }</code></p> <p>Response (200):</p> <p><code>json   { \"token\": \"&lt;jwt-or-session-id&gt;\", \"user\": { \"id\": \"u1\", \"username\": \"alice\", \"email\": \"alice@example.com\" } }</code></p> <ul> <li>POST /auth/logout \u2014 Invalidate current session/token (optional).</li> </ul> <p>Response (204): No Content</p>"},{"location":"homework4/#patch-endpoints","title":"PATCH endpoints","text":"<ul> <li>PATCH /lists/:id \u2014 Update a list.</li> </ul> <p>Request (JSON):</p> <p><code>json   { \"description\": \"Updated description\" }</code></p> <p>Response (200):</p> <p><code>json   { \"id\": \"a1b2c3d4\", \"name\": \"Groceries\", \"description\": \"Updated description\", \"updatedAt\": \"2025-10-31T13:00:00Z\" }</code></p> <ul> <li>PATCH /tasks/:id \u2014 Update a task (mark complete, change due date, etc.).</li> </ul> <p>Request (JSON):</p> <p><code>json   { \"completed\": true }</code></p> <p>Response (200):</p> <p><code>json   { \"id\": \"t123\", \"completed\": true, \"updatedAt\": \"2025-10-31T12:15:00Z\" }</code></p> <ul> <li>PATCH /users/:id \u2014 Update user profile (protected; requires bearer token).</li> </ul> <p>Request (JSON):</p> <p><code>json   { \"email\": \"new@example.com\" }</code></p> <p>Response (200):</p> <p><code>json   { \"id\": \"u1\", \"username\": \"alice\", \"email\": \"new@example.com\", \"updatedAt\": \"2025-10-31T12:20:00Z\" }</code></p>"},{"location":"homework4/#delete-endpoints","title":"DELETE endpoints","text":"<ul> <li>DELETE /lists/:id \u2014 Delete a list.</li> </ul> <p>Response (204): No Content</p> <ul> <li>DELETE /tasks/:id \u2014 Delete a task.</li> </ul> <p>Response (204): No Content</p> <p>Notes:</p> <ul> <li>Protect user and auth endpoints with authentication (JWT or session) and use HTTPS in production.</li> <li>Store passwords hashed with a strong algorithm (for example, bcrypt) and never return plaintext passwords in responses.</li> </ul>"},{"location":"homework4/HW4_plan_stage1/","title":"HW4 Part 2 Plan","text":"<p>Submission Deadline: [Write down the deadline]</p> <p>Warning: ASAP is not a plan; you must set a date for your plan, and write down the actual date when you finish the plan</p>"},{"location":"homework4/HW4_plan_stage1/#your-hw4-part-2-submission-date","title":"Your HW4 Part 2 Submission Date","text":"<ol> <li>When (Plan): Create application in PHP: finish by 2025-11-07</li> <li>When (Actual): TBD</li> <li>Comment: This document will be used to create a plan for the REST API</li> </ol>"},{"location":"homework4/HW4_plan_stage1/#project-1-milestones","title":"Project 1 Milestones","text":""},{"location":"homework4/HW4_plan_stage1/#milestone-1-submission","title":"Milestone 1 Submission","text":"<ol> <li>What:  Define API contract for REST API endpoint(s) and safety rules.</li> <li>When (Plan):  2025-11-03</li> <li>When (Actual): TBD  </li> <li>Comment: Include endpoint path(s), HTTP method(s), request/response schema, auth/flags, and environment restrictions.</li> </ol>"},{"location":"homework4/HW4_plan_stage1/#milestone-2-submission","title":"Milestone 2 Submission","text":"<ol> <li>What: Implement REST API endpoint and server-side handlers.</li> <li>When (Plan):  2025-11-05</li> <li>When (Actual): TBD  </li> <li>Comment: Keep function small where possible and add logging. Deliver a runnable PHP app (local dev).</li> </ol>"},{"location":"homework4/HW4_plan_stage1/#milestone-3-submission","title":"Milestone 3 Submission","text":"<ol> <li>What: Add unit tests for REST API</li> <li>When (Plan):  2025-11-06</li> <li>When (Actual): TBD  </li> <li>Comment: Cover happy path, safety checks, and edge cases.</li> </ol>"},{"location":"homework4/HW4_plan_stage1/#milestone-4-submission","title":"Milestone 4 Submission","text":"<ol> <li>What: Update <code>README.md</code> with REST API spec, usage, and safety notes.</li> <li>When (Plan):  2025-11-07</li> <li>When (Actual): TBD  </li> <li>Comment: Include example curl commands and environment flag instructions.</li> </ol>"},{"location":"homework5/","title":"Quality Software","text":"<p>This is a placeholder README for the Quality Software assignment (homework5).</p>"},{"location":"homework5/#presentation-example","title":"Presentation Example","text":"<p>View Marp Example Slides</p>"},{"location":"homework5/example-marp/","title":"Quality Software","text":""},{"location":"homework5/example-marp/#example-slide","title":"Example Slide","text":"<p>This is a sample Marp slide for the Quality Software assignment.</p> <ul> <li>You can write slides in Markdown</li> <li>Use <code>---</code> to separate slides</li> <li>Supports code, images, and more!</li> </ul>"},{"location":"homework5/example-marp/#thank-you","title":"Thank you!","text":""}]}